using UnityEngine;
using System.Collections;

public class TestCurve : MonoBehaviour {

    // B(t) = (1-t)2P0 + 2(1-t)tP1 + t2P2 , 0 < t < 1
/*
 * 
    public Transform[] controlPoints;
    private int curveCount = 0;
    private int segment_count = 3;


    void Start(){
        curveCount = (int)controlPoints.Length / 3;
    }


    void Update(){

       // Debug.Log("curevr :" + Mathf.Lerp(0,1,0.1f));

        for(int j=0;j< curveCount ;j++){
            for(int i=1;i<=segment_count;i++){

                float t = i / (float)segment_count;
                Vector2 newPos = Quadratice_Bezier_Curve(Mathf.Lerp(0,1,0.1f), controlPoints[0].position, controlPoints[1].position, controlPoints[2].position);
                Debug.Log(newPos);
            }
        }


    }

    Vector2 Quadratice_Bezier_Curve(float t, Vector2 p0, Vector2 p1, Vector2 p2){

        //float t = 1 - _t;
        float tt = t * t;

        Vector2 p = (1 - tt) * p0;
        p += 2 * (1 - t) * p1;
        p += tt * p2;

        return p;
    }*/

    float amplitudeX = -3.0f;
    float amplitudeY = 3.0f;

    float omegaX = 1.0f;
    float omegaY = 3.0f;
    float index;

    void Start(){
        amplitudeX = transform.position.x;
        amplitudeY = transform.position.y;
    }

    void Update(){
        index += Time.deltaTime;
        float x = amplitudeX*Mathf.Cos (omegaX*index);
        float y = Mathf.Abs (amplitudeY*Mathf.Sin (omegaY*index));
        transform.localPosition= new Vector3(x,y,0);
    }
}
